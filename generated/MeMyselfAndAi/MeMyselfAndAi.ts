// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Medication_Created extends ethereum.Event {
  get params(): Medication_Created__Params {
    return new Medication_Created__Params(this);
  }
}

export class Medication_Created__Params {
  _event: Medication_Created;

  constructor(event: Medication_Created) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get med(): Medication_CreatedMedStruct {
    return changetype<Medication_CreatedMedStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }

  get reminder_id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Medication_CreatedMedStruct extends ethereum.Tuple {
  get total_tabs_amount(): BigInt {
    return this[0].toBigInt();
  }

  get days(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get name(): string {
    return this[2].toString();
  }

  get dosage(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get desc(): string {
    return this[4].toString();
  }
}

export class Daily_Routine_Created extends ethereum.Event {
  get params(): Daily_Routine_Created__Params {
    return new Daily_Routine_Created__Params(this);
  }
}

export class Daily_Routine_Created__Params {
  _event: Daily_Routine_Created;

  constructor(event: Daily_Routine_Created) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get daily_routine(): Daily_Routine_CreatedDaily_routineStruct {
    return changetype<Daily_Routine_CreatedDaily_routineStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }

  get reminder_id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Daily_Routine_CreatedDaily_routineStruct extends ethereum.Tuple {
  get days(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get importance(): BigInt {
    return this[1].toBigInt();
  }

  get routine_description(): string {
    return this[2].toString();
  }
}

export class Appointment_Created extends ethereum.Event {
  get params(): Appointment_Created__Params {
    return new Appointment_Created__Params(this);
  }
}

export class Appointment_Created__Params {
  _event: Appointment_Created;

  constructor(event: Appointment_Created) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get appoitment(): Appointment_CreatedAppoitmentStruct {
    return changetype<Appointment_CreatedAppoitmentStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }

  get reminder_id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Appointment_CreatedAppoitmentStruct extends ethereum.Tuple {
  get days(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get importance(): BigInt {
    return this[1].toBigInt();
  }

  get location(): string {
    return this[2].toString();
  }

  get appointment_desc(): string {
    return this[3].toString();
  }
}

export class Tag_Created extends ethereum.Event {
  get params(): Tag_Created__Params {
    return new Tag_Created__Params(this);
  }
}

export class Tag_Created__Params {
  _event: Tag_Created;

  constructor(event: Tag_Created) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get user_tag_id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tag(): Tag_CreatedTagStruct {
    return changetype<Tag_CreatedTagStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class Tag_CreatedTagStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get summary(): string {
    return this[1].toString();
  }

  get importance(): BigInt {
    return this[2].toBigInt();
  }
}

export class Medication_Deleted extends ethereum.Event {
  get params(): Medication_Deleted__Params {
    return new Medication_Deleted__Params(this);
  }
}

export class Medication_Deleted__Params {
  _event: Medication_Deleted;

  constructor(event: Medication_Deleted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reminder_id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Daily_Routine_Deleted extends ethereum.Event {
  get params(): Daily_Routine_Deleted__Params {
    return new Daily_Routine_Deleted__Params(this);
  }
}

export class Daily_Routine_Deleted__Params {
  _event: Daily_Routine_Deleted;

  constructor(event: Daily_Routine_Deleted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reminder_id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Appointment_Deleted extends ethereum.Event {
  get params(): Appointment_Deleted__Params {
    return new Appointment_Deleted__Params(this);
  }
}

export class Appointment_Deleted__Params {
  _event: Appointment_Deleted;

  constructor(event: Appointment_Deleted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reminder_id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Daily_Reminder_Pushed extends ethereum.Event {
  get params(): Daily_Reminder_Pushed__Params {
    return new Daily_Reminder_Pushed__Params(this);
  }
}

export class Daily_Reminder_Pushed__Params {
  _event: Daily_Reminder_Pushed;

  constructor(event: Daily_Reminder_Pushed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get username(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class MeMyselfAndAi__get_account_detailsResultValue0Struct extends ethereum.Tuple {
  get user(): Address {
    return this[0].toAddress();
  }

  get username(): string {
    return this[1].toString();
  }

  get aid(): Address {
    return this[2].toAddress();
  }

  get iris_id(): BigInt {
    return this[3].toBigInt();
  }
}

export class MeMyselfAndAi__get_user_w3memoryname_and_signing_keyResult {
  value0: string;
  value1: string;

  constructor(value0: string, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getValue0(): string {
    return this.value0;
  }

  getValue1(): string {
    return this.value1;
  }
}

export class MeMyselfAndAi__accountsResultValue0Struct extends ethereum.Tuple {
  get user(): Address {
    return this[0].toAddress();
  }

  get username(): string {
    return this[1].toString();
  }

  get aid(): Address {
    return this[2].toAddress();
  }

  get iris_id(): BigInt {
    return this[3].toBigInt();
  }
}

export class MeMyselfAndAi__users_medsResultValue0Struct extends ethereum.Tuple {
  get total_tabs_amount(): BigInt {
    return this[0].toBigInt();
  }

  get days(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get name(): string {
    return this[2].toString();
  }

  get dosage(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get desc(): string {
    return this[4].toString();
  }
}

export class MeMyselfAndAi__users_daily_routineResultValue0Struct extends ethereum.Tuple {
  get days(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get importance(): BigInt {
    return this[1].toBigInt();
  }

  get routine_description(): string {
    return this[2].toString();
  }
}

export class MeMyselfAndAi__users_appointmentsResultValue0Struct extends ethereum.Tuple {
  get days(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get importance(): BigInt {
    return this[1].toBigInt();
  }

  get location(): string {
    return this[2].toString();
  }

  get appointment_desc(): string {
    return this[3].toString();
  }
}

export class MeMyselfAndAi__tagsResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get summary(): string {
    return this[1].toString();
  }

  get importance(): BigInt {
    return this[2].toBigInt();
  }
}

export class MeMyselfAndAi__iris_id_to_memoryResultValue0Struct extends ethereum.Tuple {
  get w3MemoryName(): string {
    return this[0].toString();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get identifier(): BigInt {
    return this[2].toBigInt();
  }

  get signing_key_cid(): string {
    return this[3].toString();
  }
}

export class MeMyselfAndAi extends ethereum.SmartContract {
  static bind(address: Address): MeMyselfAndAi {
    return new MeMyselfAndAi("MeMyselfAndAi", address);
  }

  can_decrypt(iris_id: BigInt, user: Address): boolean {
    let result = super.call(
      "can_decrypt",
      "can_decrypt(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(iris_id),
        ethereum.Value.fromAddress(user)
      ]
    );

    return result[0].toBoolean();
  }

  try_can_decrypt(
    iris_id: BigInt,
    user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "can_decrypt",
      "can_decrypt(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(iris_id),
        ethereum.Value.fromAddress(user)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  get_account_details(
    user: Address
  ): MeMyselfAndAi__get_account_detailsResultValue0Struct {
    let result = super.call(
      "get_account_details",
      "get_account_details(address):((address,string,address,uint256))",
      [ethereum.Value.fromAddress(user)]
    );

    return changetype<MeMyselfAndAi__get_account_detailsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_get_account_details(
    user: Address
  ): ethereum.CallResult<MeMyselfAndAi__get_account_detailsResultValue0Struct> {
    let result = super.tryCall(
      "get_account_details",
      "get_account_details(address):((address,string,address,uint256))",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MeMyselfAndAi__get_account_detailsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  get_next_iris_id(): BigInt {
    let result = super.call(
      "get_next_iris_id",
      "get_next_iris_id():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_get_next_iris_id(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "get_next_iris_id",
      "get_next_iris_id():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  get_user_w3memoryname_and_signing_key(
    user: Address
  ): MeMyselfAndAi__get_user_w3memoryname_and_signing_keyResult {
    let result = super.call(
      "get_user_w3memoryname_and_signing_key",
      "get_user_w3memoryname_and_signing_key(address):(string,string)",
      [ethereum.Value.fromAddress(user)]
    );

    return new MeMyselfAndAi__get_user_w3memoryname_and_signing_keyResult(
      result[0].toString(),
      result[1].toString()
    );
  }

  try_get_user_w3memoryname_and_signing_key(
    user: Address
  ): ethereum.CallResult<
    MeMyselfAndAi__get_user_w3memoryname_and_signing_keyResult
  > {
    let result = super.tryCall(
      "get_user_w3memoryname_and_signing_key",
      "get_user_w3memoryname_and_signing_key(address):(string,string)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MeMyselfAndAi__get_user_w3memoryname_and_signing_keyResult(
        value[0].toString(),
        value[1].toString()
      )
    );
  }

  deployer(): Address {
    let result = super.call("deployer", "deployer():(address)", []);

    return result[0].toAddress();
  }

  try_deployer(): ethereum.CallResult<Address> {
    let result = super.tryCall("deployer", "deployer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  iris_identifier_count(): BigInt {
    let result = super.call(
      "iris_identifier_count",
      "iris_identifier_count():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_iris_identifier_count(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "iris_identifier_count",
      "iris_identifier_count():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accounts(arg0: Address): MeMyselfAndAi__accountsResultValue0Struct {
    let result = super.call(
      "accounts",
      "accounts(address):((address,string,address,uint256))",
      [ethereum.Value.fromAddress(arg0)]
    );

    return changetype<MeMyselfAndAi__accountsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_accounts(
    arg0: Address
  ): ethereum.CallResult<MeMyselfAndAi__accountsResultValue0Struct> {
    let result = super.tryCall(
      "accounts",
      "accounts(address):((address,string,address,uint256))",
      [ethereum.Value.fromAddress(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MeMyselfAndAi__accountsResultValue0Struct>(value[0].toTuple())
    );
  }

  has_account(arg0: Address): boolean {
    let result = super.call("has_account", "has_account(address):(bool)", [
      ethereum.Value.fromAddress(arg0)
    ]);

    return result[0].toBoolean();
  }

  try_has_account(arg0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("has_account", "has_account(address):(bool)", [
      ethereum.Value.fromAddress(arg0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  taken_username(arg0: string): boolean {
    let result = super.call("taken_username", "taken_username(string):(bool)", [
      ethereum.Value.fromString(arg0)
    ]);

    return result[0].toBoolean();
  }

  try_taken_username(arg0: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "taken_username",
      "taken_username(string):(bool)",
      [ethereum.Value.fromString(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  reminder_id(arg0: Address): BigInt {
    let result = super.call("reminder_id", "reminder_id(address):(uint256)", [
      ethereum.Value.fromAddress(arg0)
    ]);

    return result[0].toBigInt();
  }

  try_reminder_id(arg0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reminder_id",
      "reminder_id(address):(uint256)",
      [ethereum.Value.fromAddress(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  users_meds(
    arg0: Address,
    arg1: BigInt
  ): MeMyselfAndAi__users_medsResultValue0Struct {
    let result = super.call(
      "users_meds",
      "users_meds(address,uint256):((uint256,uint256[],string,uint256[],string))",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );

    return changetype<MeMyselfAndAi__users_medsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_users_meds(
    arg0: Address,
    arg1: BigInt
  ): ethereum.CallResult<MeMyselfAndAi__users_medsResultValue0Struct> {
    let result = super.tryCall(
      "users_meds",
      "users_meds(address,uint256):((uint256,uint256[],string,uint256[],string))",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MeMyselfAndAi__users_medsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  users_daily_routine(
    arg0: Address,
    arg1: BigInt
  ): MeMyselfAndAi__users_daily_routineResultValue0Struct {
    let result = super.call(
      "users_daily_routine",
      "users_daily_routine(address,uint256):((uint256[],uint256,string))",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );

    return changetype<MeMyselfAndAi__users_daily_routineResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_users_daily_routine(
    arg0: Address,
    arg1: BigInt
  ): ethereum.CallResult<MeMyselfAndAi__users_daily_routineResultValue0Struct> {
    let result = super.tryCall(
      "users_daily_routine",
      "users_daily_routine(address,uint256):((uint256[],uint256,string))",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MeMyselfAndAi__users_daily_routineResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  users_appointments(
    arg0: Address,
    arg1: BigInt
  ): MeMyselfAndAi__users_appointmentsResultValue0Struct {
    let result = super.call(
      "users_appointments",
      "users_appointments(address,uint256):((uint256[],uint256,string,string))",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );

    return changetype<MeMyselfAndAi__users_appointmentsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_users_appointments(
    arg0: Address,
    arg1: BigInt
  ): ethereum.CallResult<MeMyselfAndAi__users_appointmentsResultValue0Struct> {
    let result = super.tryCall(
      "users_appointments",
      "users_appointments(address,uint256):((uint256[],uint256,string,string))",
      [
        ethereum.Value.fromAddress(arg0),
        ethereum.Value.fromUnsignedBigInt(arg1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MeMyselfAndAi__users_appointmentsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  tags(arg0: BigInt): MeMyselfAndAi__tagsResultValue0Struct {
    let result = super.call("tags", "tags(uint256):((string,string,uint256))", [
      ethereum.Value.fromUnsignedBigInt(arg0)
    ]);

    return changetype<MeMyselfAndAi__tagsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_tags(
    arg0: BigInt
  ): ethereum.CallResult<MeMyselfAndAi__tagsResultValue0Struct> {
    let result = super.tryCall(
      "tags",
      "tags(uint256):((string,string,uint256))",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MeMyselfAndAi__tagsResultValue0Struct>(value[0].toTuple())
    );
  }

  tag_id(arg0: Address): BigInt {
    let result = super.call("tag_id", "tag_id(address):(uint256)", [
      ethereum.Value.fromAddress(arg0)
    ]);

    return result[0].toBigInt();
  }

  try_tag_id(arg0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("tag_id", "tag_id(address):(uint256)", [
      ethereum.Value.fromAddress(arg0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  iris_id_to_memory(
    arg0: BigInt
  ): MeMyselfAndAi__iris_id_to_memoryResultValue0Struct {
    let result = super.call(
      "iris_id_to_memory",
      "iris_id_to_memory(uint256):((string,address,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );

    return changetype<MeMyselfAndAi__iris_id_to_memoryResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_iris_id_to_memory(
    arg0: BigInt
  ): ethereum.CallResult<MeMyselfAndAi__iris_id_to_memoryResultValue0Struct> {
    let result = super.tryCall(
      "iris_id_to_memory",
      "iris_id_to_memory(uint256):((string,address,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(arg0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MeMyselfAndAi__iris_id_to_memoryResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  all_users(arg0: BigInt): Address {
    let result = super.call("all_users", "all_users(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(arg0)
    ]);

    return result[0].toAddress();
  }

  try_all_users(arg0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("all_users", "all_users(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(arg0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  validity(arg0: Address, arg1: BigInt): boolean {
    let result = super.call("validity", "validity(address,uint256):(bool)", [
      ethereum.Value.fromAddress(arg0),
      ethereum.Value.fromUnsignedBigInt(arg1)
    ]);

    return result[0].toBoolean();
  }

  try_validity(arg0: Address, arg1: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("validity", "validity(address,uint256):(bool)", [
      ethereum.Value.fromAddress(arg0),
      ethereum.Value.fromUnsignedBigInt(arg1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class Create_accountCall extends ethereum.Call {
  get inputs(): Create_accountCall__Inputs {
    return new Create_accountCall__Inputs(this);
  }

  get outputs(): Create_accountCall__Outputs {
    return new Create_accountCall__Outputs(this);
  }
}

export class Create_accountCall__Inputs {
  _call: Create_accountCall;

  constructor(call: Create_accountCall) {
    this._call = call;
  }

  get username(): string {
    return this._call.inputValues[0].value.toString();
  }

  get aid(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get w3MemoryName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get signing_key_cid(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class Create_accountCall__Outputs {
  _call: Create_accountCall;

  constructor(call: Create_accountCall) {
    this._call = call;
  }
}

export class Create_medicationCall extends ethereum.Call {
  get inputs(): Create_medicationCall__Inputs {
    return new Create_medicationCall__Inputs(this);
  }

  get outputs(): Create_medicationCall__Outputs {
    return new Create_medicationCall__Outputs(this);
  }
}

export class Create_medicationCall__Inputs {
  _call: Create_medicationCall;

  constructor(call: Create_medicationCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get med(): Create_medicationCallMedStruct {
    return changetype<Create_medicationCallMedStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class Create_medicationCall__Outputs {
  _call: Create_medicationCall;

  constructor(call: Create_medicationCall) {
    this._call = call;
  }
}

export class Create_medicationCallMedStruct extends ethereum.Tuple {
  get total_tabs_amount(): BigInt {
    return this[0].toBigInt();
  }

  get days(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get name(): string {
    return this[2].toString();
  }

  get dosage(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get desc(): string {
    return this[4].toString();
  }
}

export class Delete_medicationCall extends ethereum.Call {
  get inputs(): Delete_medicationCall__Inputs {
    return new Delete_medicationCall__Inputs(this);
  }

  get outputs(): Delete_medicationCall__Outputs {
    return new Delete_medicationCall__Outputs(this);
  }
}

export class Delete_medicationCall__Inputs {
  _call: Delete_medicationCall;

  constructor(call: Delete_medicationCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get reminder_id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Delete_medicationCall__Outputs {
  _call: Delete_medicationCall;

  constructor(call: Delete_medicationCall) {
    this._call = call;
  }
}

export class Create_daily_routineCall extends ethereum.Call {
  get inputs(): Create_daily_routineCall__Inputs {
    return new Create_daily_routineCall__Inputs(this);
  }

  get outputs(): Create_daily_routineCall__Outputs {
    return new Create_daily_routineCall__Outputs(this);
  }
}

export class Create_daily_routineCall__Inputs {
  _call: Create_daily_routineCall;

  constructor(call: Create_daily_routineCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get daily_routine(): Create_daily_routineCallDaily_routineStruct {
    return changetype<Create_daily_routineCallDaily_routineStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class Create_daily_routineCall__Outputs {
  _call: Create_daily_routineCall;

  constructor(call: Create_daily_routineCall) {
    this._call = call;
  }
}

export class Create_daily_routineCallDaily_routineStruct extends ethereum.Tuple {
  get days(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get importance(): BigInt {
    return this[1].toBigInt();
  }

  get routine_description(): string {
    return this[2].toString();
  }
}

export class Delete_daily_routineCall extends ethereum.Call {
  get inputs(): Delete_daily_routineCall__Inputs {
    return new Delete_daily_routineCall__Inputs(this);
  }

  get outputs(): Delete_daily_routineCall__Outputs {
    return new Delete_daily_routineCall__Outputs(this);
  }
}

export class Delete_daily_routineCall__Inputs {
  _call: Delete_daily_routineCall;

  constructor(call: Delete_daily_routineCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get reminder_id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Delete_daily_routineCall__Outputs {
  _call: Delete_daily_routineCall;

  constructor(call: Delete_daily_routineCall) {
    this._call = call;
  }
}

export class Create_appointmentCall extends ethereum.Call {
  get inputs(): Create_appointmentCall__Inputs {
    return new Create_appointmentCall__Inputs(this);
  }

  get outputs(): Create_appointmentCall__Outputs {
    return new Create_appointmentCall__Outputs(this);
  }
}

export class Create_appointmentCall__Inputs {
  _call: Create_appointmentCall;

  constructor(call: Create_appointmentCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get appointment(): Create_appointmentCallAppointmentStruct {
    return changetype<Create_appointmentCallAppointmentStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class Create_appointmentCall__Outputs {
  _call: Create_appointmentCall;

  constructor(call: Create_appointmentCall) {
    this._call = call;
  }
}

export class Create_appointmentCallAppointmentStruct extends ethereum.Tuple {
  get days(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get importance(): BigInt {
    return this[1].toBigInt();
  }

  get location(): string {
    return this[2].toString();
  }

  get appointment_desc(): string {
    return this[3].toString();
  }
}

export class Delete_appointmentCall extends ethereum.Call {
  get inputs(): Delete_appointmentCall__Inputs {
    return new Delete_appointmentCall__Inputs(this);
  }

  get outputs(): Delete_appointmentCall__Outputs {
    return new Delete_appointmentCall__Outputs(this);
  }
}

export class Delete_appointmentCall__Inputs {
  _call: Delete_appointmentCall;

  constructor(call: Delete_appointmentCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get reminder_id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class Delete_appointmentCall__Outputs {
  _call: Delete_appointmentCall;

  constructor(call: Delete_appointmentCall) {
    this._call = call;
  }
}

export class Create_tagCall extends ethereum.Call {
  get inputs(): Create_tagCall__Inputs {
    return new Create_tagCall__Inputs(this);
  }

  get outputs(): Create_tagCall__Outputs {
    return new Create_tagCall__Outputs(this);
  }
}

export class Create_tagCall__Inputs {
  _call: Create_tagCall;

  constructor(call: Create_tagCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tag(): Create_tagCallTagStruct {
    return changetype<Create_tagCallTagStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class Create_tagCall__Outputs {
  _call: Create_tagCall;

  constructor(call: Create_tagCall) {
    this._call = call;
  }
}

export class Create_tagCallTagStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get summary(): string {
    return this[1].toString();
  }

  get importance(): BigInt {
    return this[2].toBigInt();
  }
}

export class Push_daily_application_reminderCall extends ethereum.Call {
  get inputs(): Push_daily_application_reminderCall__Inputs {
    return new Push_daily_application_reminderCall__Inputs(this);
  }

  get outputs(): Push_daily_application_reminderCall__Outputs {
    return new Push_daily_application_reminderCall__Outputs(this);
  }
}

export class Push_daily_application_reminderCall__Inputs {
  _call: Push_daily_application_reminderCall;

  constructor(call: Push_daily_application_reminderCall) {
    this._call = call;
  }
}

export class Push_daily_application_reminderCall__Outputs {
  _call: Push_daily_application_reminderCall;

  constructor(call: Push_daily_application_reminderCall) {
    this._call = call;
  }
}

export class Get_account_detailsCall extends ethereum.Call {
  get inputs(): Get_account_detailsCall__Inputs {
    return new Get_account_detailsCall__Inputs(this);
  }

  get outputs(): Get_account_detailsCall__Outputs {
    return new Get_account_detailsCall__Outputs(this);
  }
}

export class Get_account_detailsCall__Inputs {
  _call: Get_account_detailsCall;

  constructor(call: Get_account_detailsCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Get_account_detailsCall__Outputs {
  _call: Get_account_detailsCall;

  constructor(call: Get_account_detailsCall) {
    this._call = call;
  }

  get value0(): Get_account_detailsCallValue0Struct {
    return changetype<Get_account_detailsCallValue0Struct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class Get_account_detailsCallValue0Struct extends ethereum.Tuple {
  get user(): Address {
    return this[0].toAddress();
  }

  get username(): string {
    return this[1].toString();
  }

  get aid(): Address {
    return this[2].toAddress();
  }

  get iris_id(): BigInt {
    return this[3].toBigInt();
  }
}

export class Get_next_iris_idCall extends ethereum.Call {
  get inputs(): Get_next_iris_idCall__Inputs {
    return new Get_next_iris_idCall__Inputs(this);
  }

  get outputs(): Get_next_iris_idCall__Outputs {
    return new Get_next_iris_idCall__Outputs(this);
  }
}

export class Get_next_iris_idCall__Inputs {
  _call: Get_next_iris_idCall;

  constructor(call: Get_next_iris_idCall) {
    this._call = call;
  }
}

export class Get_next_iris_idCall__Outputs {
  _call: Get_next_iris_idCall;

  constructor(call: Get_next_iris_idCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class Get_user_w3memoryname_and_signing_keyCall extends ethereum.Call {
  get inputs(): Get_user_w3memoryname_and_signing_keyCall__Inputs {
    return new Get_user_w3memoryname_and_signing_keyCall__Inputs(this);
  }

  get outputs(): Get_user_w3memoryname_and_signing_keyCall__Outputs {
    return new Get_user_w3memoryname_and_signing_keyCall__Outputs(this);
  }
}

export class Get_user_w3memoryname_and_signing_keyCall__Inputs {
  _call: Get_user_w3memoryname_and_signing_keyCall;

  constructor(call: Get_user_w3memoryname_and_signing_keyCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class Get_user_w3memoryname_and_signing_keyCall__Outputs {
  _call: Get_user_w3memoryname_and_signing_keyCall;

  constructor(call: Get_user_w3memoryname_and_signing_keyCall) {
    this._call = call;
  }

  get value0(): string {
    return this._call.outputValues[0].value.toString();
  }

  get value1(): string {
    return this._call.outputValues[1].value.toString();
  }
}
